# This file is generated by the program.
# Note that any changes to this file will be reset by the execution of
# the generated program.

import utils/enumutilities
import basetypes
import enum_features

type
  # KHR surface
  # -----------
  SurfaceTransformFlagBitsKHR* {.vkFlagBits.} = enum
    identityKhr = 0x00000001
    rotate90Khr = 0x00000002
    rotate180Khr = 0x00000004
    rotate270Khr = 0x00000008
    horizontalMirrorKhr = 0x00000010
    horizontalMirrorRotate90Khr = 0x00000020
    horizontalMirrorRotate180Khr = 0x00000040
    horizontalMirrorRotate270Khr = 0x00000080
    inheritKhr = 0x00000100
  PresentModeKHR* {.vkEnum.} = enum
    immediateKhr = 0
    mailboxKhr = 1
    fifoKhr = 2
    fifoRelaxedKhr = 3
    # Provided by VK_KHR_shared_presentable_image
    sharedDemandRefreshKhr = 1000111000
    sharedContinuousRefreshKhr = 1000111001
  ColorSpaceKHR* {.vkEnum.} = enum
    srgbNonlinearKhr = 0
    # Provided by VK_EXT_swapchain_colorspace
    displayP3NonlinearExt = 1000104001
    extendedSrgbLinearExt = 1000104002
    displayP3LinearExt = 1000104003
    dciP3NonlinearExt = 1000104004
    bt709LinearExt = 1000104005
    bt709NonlinearExt = 1000104006
    bt2020LinearExt = 1000104007
    hdr10St2084Ext = 1000104008
    dolbyvisionExt = 1000104009
    hdr10HlgExt = 1000104010
    adobergbLinearExt = 1000104011
    adobergbNonlinearExt = 1000104012
    passThroughExt = 1000104013
    extendedSrgbNonlinearExt = 1000104014
    # Provided by VK_AMD_display_native_hdr
    displayNativeAmd = 1000213000
  CompositeAlphaFlagBitsKHR* {.vkFlagBits.} = enum
    opaqueKhr = 0x00000001
    preMultipliedKhr = 0x00000002
    postMultipliedKhr = 0x00000004
    inheritKhr = 0x00000008
  CompositeAlphaFlagsKHR* = Flags[CompositeAlphaFlagBitsKHR]
  # KHR swapchain
  # -------------
  SwapchainCreateFlagBitsKHR* {.vkFlagBits.} = enum
    # Provided by VK_KHR_swapchain
    splitInstanceBindRegionsKhr = 0x00000001 # Allow images with VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT
    protectedKhr = 0x00000002 # Swapchain is protected
    # Provided by VK_KHR_swapchain_mutable_format
    mutableFormatKhr = 0x00000004
  SwapchainCreateFlagsKHR* = Flags[SwapchainCreateFlagBitsKHR]
  DeviceGroupPresentModeFlagBitsKHR* {.vkFlagBits.} = enum
    localKhr = 0x00000001 # Present from local memory
    remoteKhr = 0x00000002 # Present from remote memory
    sumKhr = 0x00000004 # Present sum of local and/or remote memory
    localMultiDeviceKhr = 0x00000008 # Each physical device presents from local memory
  DeviceGroupPresentModeFlagsKHR* = Flags[DeviceGroupPresentModeFlagBitsKHR]
  # KHR display
  # -----------
  DisplayModeCreateFlagsKHR* = Flags[distinct UnusedEnum]
  DisplayPlaneAlphaFlagBitsKHR* {.vkFlagBits.} = enum
    opaqueKhr = 0x00000001
    globalKhr = 0x00000002
    perPixelKhr = 0x00000004
    perPixelPremultipliedKhr = 0x00000008
  DisplayPlaneAlphaFlagsKHR* = Flags[DisplayPlaneAlphaFlagBitsKHR]
  DisplaySurfaceCreateFlagsKHR* = Flags[distinct UnusedEnum]
  SurfaceTransformFlagsKHR* = Flags[SurfaceTransformFlagBitsKHR]
  # KHR xlib surface
  # ----------------
  XlibSurfaceCreateFlagsKHR* = Flags[distinct UnusedEnum]
  # KHR xcb surface
  # ---------------
  XcbSurfaceCreateFlagsKHR* = Flags[distinct UnusedEnum]
  # KHR wayland surface
  # -------------------
  WaylandSurfaceCreateFlagsKHR* = Flags[distinct UnusedEnum]
  # KHR android surface
  # -------------------
  AndroidSurfaceCreateFlagsKHR* = Flags[distinct UnusedEnum]
  # KHR win32 surface
  # -----------------
  Win32SurfaceCreateFlagsKHR* = Flags[distinct UnusedEnum]
  # ANDROID native buffer
  # ---------------------
  SwapchainImageUsageFlagBitsANDROID* {.vkFlagBits.} = enum
    sharedAndroid = 0x00000001
  SwapchainImageUsageFlagsANDROID* = Flags[SwapchainImageUsageFlagBitsANDROID]
  # EXT debug report
  # ----------------
  DebugReportFlagBitsEXT* {.vkFlagBits.} = enum
    informationExt = 0x00000001
    warningExt = 0x00000002
    performanceWarningExt = 0x00000004
    errorExt = 0x00000008
    debugExt = 0x00000010
  DebugReportFlagsEXT* = Flags[DebugReportFlagBitsEXT]
  DebugReportObjectTypeEXT* {.vkEnum.} = enum
    unknownExt = 0
    instanceExt = 1
    physicalDeviceExt = 2
    deviceExt = 3
    queueExt = 4
    semaphoreExt = 5
    commandBufferExt = 6
    fenceExt = 7
    deviceMemoryExt = 8
    bufferExt = 9
    imageExt = 10
    eventExt = 11
    queryPoolExt = 12
    bufferViewExt = 13
    imageViewExt = 14
    shaderModuleExt = 15
    pipelineCacheExt = 16
    pipelineLayoutExt = 17
    renderPassExt = 18
    pipelineExt = 19
    descriptorSetLayoutExt = 20
    samplerExt = 21
    descriptorPoolExt = 22
    descriptorSetExt = 23
    framebufferExt = 24
    commandPoolExt = 25
    surfaceKhrExt = 26
    swapchainKhrExt = 27
    debugReportCallbackExtExt = 28
    displayKhrExt = 29
    displayModeKhrExt = 30
    validationCacheExtExt = 33
    # Provided by VK_EXT_debug_report
    descriptorUpdateTemplateExt = 1000085000
    samplerYcbcrConversionExt = 1000156000
    # Provided by VK_KHR_ray_tracing
    accelerationStructureKhrExt = 1000165000
  # AMD rasterization order
  # -----------------------
  RasterizationOrderAMD* {.vkEnum.} = enum
    strictAmd = 0
    relaxedAmd = 1
  # EXT transform feedback
  # ----------------------
  PipelineRasterizationStateStreamCreateFlagsEXT* = Flags[distinct UnusedEnum]
  # AMD shader info
  # ---------------
  ShaderInfoTypeAMD* {.vkEnum.} = enum
    statisticsAmd = 0
    binaryAmd = 1
    disassemblyAmd = 2
  # GGP stream descriptor surface
  # -----------------------------
  StreamDescriptorSurfaceCreateFlagsGGP* = Flags[distinct UnusedEnum]
  # NV external memory capabilities
  # -------------------------------
  ExternalMemoryHandleTypeFlagsNV* = Flags[ExternalMemoryHandleTypeFlagBitsNV]
  ExternalMemoryHandleTypeFlagBitsNV* {.vkFlagBits.} = enum
    opaqueWin32Nv = 0x00000001
    opaqueWin32KmtNv = 0x00000002
    d3d11ImageNv = 0x00000004
    d3d11ImageKmtNv = 0x00000008
  ExternalMemoryFeatureFlagsNV* = Flags[ExternalMemoryFeatureFlagBitsNV]
  ExternalMemoryFeatureFlagBitsNV* {.vkFlagBits.} = enum
    dedicatedOnlyNv = 0x00000001
    exportableNv = 0x00000002
    importableNv = 0x00000004
  # KHR device group
  # ----------------
  PeerMemoryFeatureFlagsKHR* = PeerMemoryFeatureFlags
  PeerMemoryFeatureFlagBitsKHR* = distinct UnusedEnum
  MemoryAllocateFlagsKHR* = MemoryAllocateFlags
  MemoryAllocateFlagBitsKHR* = distinct UnusedEnum
  # EXT validation flags
  # --------------------
  ValidationCheckEXT* {.vkEnum.} = enum
    allExt = 0
    shadersExt = 1
  # NN vi surface
  # -------------
  ViSurfaceCreateFlagsNN* = Flags[distinct UnusedEnum]
  # KHR maintenance1
  # ----------------
  CommandPoolTrimFlagsKHR* = CommandPoolTrimFlags
  # KHR external memory capabilities
  # --------------------------------
  ExternalMemoryHandleTypeFlagsKHR* = ExternalMemoryHandleTypeFlags
  ExternalMemoryHandleTypeFlagBitsKHR* = distinct UnusedEnum
  ExternalMemoryFeatureFlagsKHR* = ExternalMemoryFeatureFlags
  ExternalMemoryFeatureFlagBitsKHR* = distinct UnusedEnum
  # KHR external semaphore capabilities
  # -----------------------------------
  ExternalSemaphoreHandleTypeFlagsKHR* = ExternalSemaphoreHandleTypeFlags
  ExternalSemaphoreHandleTypeFlagBitsKHR* = distinct UnusedEnum
  ExternalSemaphoreFeatureFlagsKHR* = ExternalSemaphoreFeatureFlags
  ExternalSemaphoreFeatureFlagBitsKHR* = distinct UnusedEnum
  # KHR external semaphore
  # ----------------------
  SemaphoreImportFlagsKHR* = SemaphoreImportFlags
  SemaphoreImportFlagBitsKHR* = distinct UnusedEnum
  # EXT conditional rendering
  # -------------------------
  ConditionalRenderingFlagsEXT* = Flags[ConditionalRenderingFlagBitsEXT]
  ConditionalRenderingFlagBitsEXT* {.vkFlagBits.} = enum
    invertedExt = 0x00000001
  # KHR descriptor update template
  # ------------------------------
  DescriptorUpdateTemplateCreateFlagsKHR* = DescriptorUpdateTemplateCreateFlags
  DescriptorUpdateTemplateTypeKHR* = distinct UnusedEnum
  # EXT display surface counter
  # ---------------------------
  SurfaceCounterFlagsEXT* = Flags[SurfaceCounterFlagBitsEXT]
  SurfaceCounterFlagBitsEXT* {.vkFlagBits.} = enum
    vblankExt = 0x00000001
  # EXT display control
  # -------------------
  DisplayPowerStateEXT* {.vkEnum.} = enum
    offExt = 0
    suspendExt = 1
    onExt = 2
  DeviceEventTypeEXT* {.vkEnum.} = enum
    displayHotplugExt = 0
  DisplayEventTypeEXT* {.vkEnum.} = enum
    firstPixelOutExt = 0
  # NV viewport swizzle
  # -------------------
  ViewportCoordinateSwizzleNV* {.vkEnum.} = enum
    positiveXNv = 0
    negativeXNv = 1
    positiveYNv = 2
    negativeYNv = 3
    positiveZNv = 4
    negativeZNv = 5
    positiveWNv = 6
    negativeWNv = 7
  PipelineViewportSwizzleStateCreateFlagsNV* = Flags[distinct UnusedEnum]
  # EXT discard rectangles
  # ----------------------
  PipelineDiscardRectangleStateCreateFlagsEXT* = Flags[distinct UnusedEnum]
  DiscardRectangleModeEXT* {.vkEnum.} = enum
    inclusiveExt = 0
    exclusiveExt = 1
  # EXT conservative rasterization
  # ------------------------------
  PipelineRasterizationConservativeStateCreateFlagsEXT* = Flags[distinct UnusedEnum]
  ConservativeRasterizationModeEXT* {.vkEnum.} = enum
    disabledExt = 0
    overestimateExt = 1
    underestimateExt = 2
  # EXT depth clip enable
  # ---------------------
  PipelineRasterizationDepthClipStateCreateFlagsEXT* = Flags[distinct UnusedEnum]
  # KHR external fence capabilities
  # -------------------------------
  ExternalFenceHandleTypeFlagsKHR* = ExternalFenceHandleTypeFlags
  ExternalFenceHandleTypeFlagBitsKHR* = distinct UnusedEnum
  ExternalFenceFeatureFlagsKHR* = ExternalFenceFeatureFlags
  ExternalFenceFeatureFlagBitsKHR* = distinct UnusedEnum
  # KHR external fence
  # ------------------
  FenceImportFlagsKHR* = FenceImportFlags
  FenceImportFlagBitsKHR* = distinct UnusedEnum
  # KHR performance query
  # ---------------------
  PerformanceCounterDescriptionFlagsKHR* = Flags[PerformanceCounterDescriptionFlagBitsKHR]
  PerformanceCounterDescriptionFlagBitsKHR* {.vkFlagBits.} = enum
    performanceImpactingKhr = 0x00000001
    concurrentlyImpactedKhr = 0x00000002
  PerformanceCounterScopeKHR* {.vkEnum.} = enum
    commandBufferKhr = 0
    renderPassKhr = 1
    commandKhr = 2
  PerformanceCounterStorageKHR* {.vkEnum.} = enum
    int32Khr = 0
    int64Khr = 1
    uint32Khr = 2
    uint64Khr = 3
    float32Khr = 4
    float64Khr = 5
  PerformanceCounterUnitKHR* {.vkEnum.} = enum
    genericKhr = 0
    percentageKhr = 1
    nanosecondsKhr = 2
    bytesKhr = 3
    bytesPerSecondKhr = 4
    kelvinKhr = 5
    wattsKhr = 6
    voltsKhr = 7
    ampsKhr = 8
    hertzKhr = 9
    cyclesKhr = 10
  AcquireProfilingLockFlagsKHR* = Flags[AcquireProfilingLockFlagBitsKHR]
  AcquireProfilingLockFlagBitsKHR* = distinct UnusedEnum
  # KHR maintenance2
  # ----------------
  PointClippingBehaviorKHR* = distinct UnusedEnum
  TessellationDomainOriginKHR* = distinct UnusedEnum
  # Mios surface
  # ------------
  IOSSurfaceCreateFlagsMVK* = Flags[distinct UnusedEnum]
  # Mmacos surface
  # --------------
  MacOSSurfaceCreateFlagsMVK* = Flags[distinct UnusedEnum]
  # EXT debug utils
  # ---------------
  DebugUtilsMessageSeverityFlagBitsEXT* {.vkFlagBits.} = enum
    verboseExt = 0x00000001
    infoExt = 0x00000010
    warningExt = 0x00000100
    errorExt = 0x00001000
  DebugUtilsMessageSeverityFlagsEXT* = Flags[DebugUtilsMessageSeverityFlagBitsEXT]
  DebugUtilsMessageTypeFlagBitsEXT* {.vkFlagBits.} = enum
    generalExt = 0x00000001
    validationExt = 0x00000002
    performanceExt = 0x00000004
  DebugUtilsMessageTypeFlagsEXT* = Flags[DebugUtilsMessageTypeFlagBitsEXT]
  DebugUtilsMessengerCallbackDataFlagsEXT* = Flags[distinct UnusedEnum]
  DebugUtilsMessengerCreateFlagsEXT* = Flags[distinct UnusedEnum]
  # EXT sampler filter minmax
  # -------------------------
  SamplerReductionModeEXT* = distinct UnusedEnum
  # EXT blend operation advanced
  # ----------------------------
  BlendOverlapEXT* {.vkEnum.} = enum
    uncorrelatedExt = 0
    disjointExt = 1
    conjointExt = 2
  # NV fragment coverage to color
  # -----------------------------
  PipelineCoverageToColorStateCreateFlagsNV* = Flags[distinct UnusedEnum]
  # KHR ray tracing
  # ---------------
  AccelerationStructureTypeKHR* {.vkEnum.} = enum
    topLevelKhr = 0
    bottomLevelKhr = 1
  RayTracingShaderGroupTypeKHR* {.vkEnum.} = enum
    generalKhr = 0
    trianglesHitGroupKhr = 1
    proceduralHitGroupKhr = 2
  AccelerationStructureBuildTypeKHR* {.vkEnum.} = enum
    hostKhr = 0
    deviceKhr = 1
    hostOrDeviceKhr = 2
  GeometryFlagsKHR* = Flags[GeometryFlagBitsKHR]
  GeometryInstanceFlagsKHR* = Flags[GeometryInstanceFlagBitsKHR]
  GeometryFlagBitsKHR* {.vkFlagBits.} = enum
    opaqueKhr = 0x00000001
    noDuplicateAnyHitInvocationKhr = 0x00000002
  GeometryInstanceFlagBitsKHR* {.vkFlagBits.} = enum
    triangleFacingCullDisableKhr = 0x00000001
    triangleFrontCounterclockwiseKhr = 0x00000002
    forceOpaqueKhr = 0x00000004
    forceNoOpaqueKhr = 0x00000008
  BuildAccelerationStructureFlagBitsKHR* {.vkFlagBits.} = enum
    allowUpdateKhr = 0x00000001
    allowCompactionKhr = 0x00000002
    preferFastTraceKhr = 0x00000004
    preferFastBuildKhr = 0x00000008
    lowMemoryKhr = 0x00000010
  BuildAccelerationStructureFlagsKHR* = Flags[BuildAccelerationStructureFlagBitsKHR]
  CopyAccelerationStructureModeKHR* {.vkEnum.} = enum
    cloneKhr = 0
    compactKhr = 1
    serializeKhr = 2
    deserializeKhr = 3
  GeometryTypeKHR* {.vkEnum.} = enum
    trianglesKhr = 0
    aabbsKhr = 1
    # Provided by VK_KHR_ray_tracing
    instancesKhr = 1000150000
  AccelerationStructureMemoryRequirementsTypeKHR* {.vkEnum.} = enum
    objectKhr = 0
    buildScratchKhr = 1
    updateScratchKhr = 2
  # NV framebuffer mixed samples
  # ----------------------------
  PipelineCoverageModulationStateCreateFlagsNV* = Flags[distinct UnusedEnum]
  CoverageModulationModeNV* {.vkEnum.} = enum
    noneNv = 0
    rgbNv = 1
    alphaNv = 2
    rgbaNv = 3
  # KHR sampler ycbcr conversion
  # ----------------------------
  SamplerYcbcrModelConversionKHR* = distinct UnusedEnum
  SamplerYcbcrRangeKHR* = distinct UnusedEnum
  ChromaLocationKHR* = distinct UnusedEnum
  # EXT validation cache
  # --------------------
  ValidationCacheHeaderVersionEXT* {.vkEnum.} = enum
    oneExt = 1
  ValidationCacheCreateFlagsEXT* = Flags[distinct UnusedEnum]
  # EXT descriptor indexing
  # -----------------------
  DescriptorBindingFlagBitsEXT* = distinct UnusedEnum
  DescriptorBindingFlagsEXT* = DescriptorBindingFlags
  # NV shading rate image
  # ---------------------
  ShadingRatePaletteEntryNV* {.vkEnum.} = enum
    noInvocationsNv = 0
    e16InvocationsPerPixelNv = 1
    e8InvocationsPerPixelNv = 2
    e4InvocationsPerPixelNv = 3
    e2InvocationsPerPixelNv = 4
    e1InvocationPerPixelNv = 5
    e1InvocationPer2x1PixelsNv = 6
    e1InvocationPer1x2PixelsNv = 7
    e1InvocationPer2x2PixelsNv = 8
    e1InvocationPer4x2PixelsNv = 9
    e1InvocationPer2x4PixelsNv = 10
    e1InvocationPer4x4PixelsNv = 11
  CoarseSampleOrderTypeNV* {.vkEnum.} = enum
    defaultNv = 0
    customNv = 1
    pixelMajorNv = 2
    sampleMajorNv = 3
  # NV ray tracing
  # --------------
  RayTracingShaderGroupTypeNV* = distinct UnusedEnum
  GeometryTypeNV* = distinct UnusedEnum
  AccelerationStructureTypeNV* = distinct UnusedEnum
  GeometryFlagsNV* = GeometryFlagsKHR
  GeometryFlagBitsNV* = distinct UnusedEnum
  GeometryInstanceFlagsNV* = GeometryInstanceFlagsKHR
  GeometryInstanceFlagBitsNV* = distinct UnusedEnum
  BuildAccelerationStructureFlagBitsNV* = distinct UnusedEnum
  BuildAccelerationStructureFlagsNV* = BuildAccelerationStructureFlagsKHR
  CopyAccelerationStructureModeNV* = distinct UnusedEnum
  AccelerationStructureMemoryRequirementsTypeNV* = distinct UnusedEnum
  # EXT global priority
  # -------------------
  QueueGlobalPriorityEXT* {.vkEnum.} = enum
    lowExt = 128
    mediumExt = 256
    highExt = 512
    realtimeExt = 1024
  # AMD pipeline compiler control
  # -----------------------------
  PipelineCompilerControlFlagBitsAMD* = distinct UnusedEnum
  PipelineCompilerControlFlagsAMD* = Flags[PipelineCompilerControlFlagBitsAMD]
  # EXT calibrated timestamps
  # -------------------------
  TimeDomainEXT* {.vkEnum.} = enum
    deviceExt = 0
    clockMonotonicExt = 1
    clockMonotonicRawExt = 2
    queryPerformanceCounterExt = 3
  # AMD memory overallocation behavior
  # ----------------------------------
  MemoryOverallocationBehaviorAMD* {.vkEnum.} = enum
    defaultAmd = 0
    allowedAmd = 1
    disallowedAmd = 2
  # EXT pipeline creation feedback
  # ------------------------------
  PipelineCreationFeedbackFlagBitsEXT* {.vkFlagBits.} = enum
    validExt = 0x00000001
    applicationPipelineCacheHitExt = 0x00000002
    basePipelineAccelerationExt = 0x00000004
  PipelineCreationFeedbackFlagsEXT* = Flags[PipelineCreationFeedbackFlagBitsEXT]
  # KHR driver properties
  # ---------------------
  DriverIdKHR* = distinct UnusedEnum
  # KHR shader float controls
  # -------------------------
  ShaderFloatControlsIndependenceKHR* = distinct UnusedEnum
  # KHR depth stencil resolve
  # -------------------------
  ResolveModeFlagBitsKHR* = distinct UnusedEnum
  ResolveModeFlagsKHR* = ResolveModeFlags
  # KHR timeline semaphore
  # ----------------------
  SemaphoreTypeKHR* = distinct UnusedEnum
  SemaphoreWaitFlagBitsKHR* = distinct UnusedEnum
  SemaphoreWaitFlagsKHR* = SemaphoreWaitFlags
  # INTEL performance query
  # -----------------------
  PerformanceConfigurationTypeINTEL* {.vkEnum.} = enum
    commandQueueMetricsDiscoveryActivatedIntel = 0
  QueryPoolSamplingModeINTEL* {.vkEnum.} = enum
    manualIntel = 0
  PerformanceOverrideTypeINTEL* {.vkEnum.} = enum
    nullHardwareIntel = 0
    flushGpuCachesIntel = 1
  PerformanceParameterTypeINTEL* {.vkEnum.} = enum
    hwCountersSupportedIntel = 0
    streamMarkerValidsIntel = 1
  PerformanceValueTypeINTEL* {.vkEnum.} = enum
    uint32Intel = 0
    uint64Intel = 1
    floatIntel = 2
    boolIntel = 3
    stringIntel = 4
  # FUCHSIA imagepipe surface
  # -------------------------
  ImagePipeSurfaceCreateFlagsFUCHSIA* = Flags[distinct UnusedEnum]
  # EXT metal surface
  # -----------------
  MetalSurfaceCreateFlagsEXT* = Flags[distinct UnusedEnum]
  # AMD shader core properties2
  # ---------------------------
  ShaderCorePropertiesFlagBitsAMD* = distinct UnusedEnum
  ShaderCorePropertiesFlagsAMD* = Flags[ShaderCorePropertiesFlagBitsAMD]
  # EXT tooling info
  # ----------------
  ToolPurposeFlagBitsEXT* {.vkFlagBits.} = enum
    validationExt = 0x00000001
    profilingExt = 0x00000002
    tracingExt = 0x00000004
    additionalFeaturesExt = 0x00000008
    modifyingFeaturesExt = 0x00000010
    # Provided by VK_EXT_tooling_info
    debugReportingExt = 0x00000020
    debugMarkersExt = 0x00000040
  ToolPurposeFlagsEXT* = Flags[ToolPurposeFlagBitsEXT]
  # EXT validation features
  # -----------------------
  ValidationFeatureEnableEXT* {.vkEnum.} = enum
    gpuAssistedExt = 0
    gpuAssistedReserveBindingSlotExt = 1
    bestPracticesExt = 2
    debugPrintfExt = 3
    synchronizationValidationExt = 4
  ValidationFeatureDisableEXT* {.vkEnum.} = enum
    allExt = 0
    shadersExt = 1
    threadSafetyExt = 2
    apiParametersExt = 3
    objectLifetimesExt = 4
    coreChecksExt = 5
    uniqueHandlesExt = 6
  # NV cooperative matrix
  # ---------------------
  ScopeNV* {.vkEnum.} = enum
    deviceNv = 1
    workgroupNv = 2
    subgroupNv = 3
    queueFamilyNv = 5
  ComponentTypeNV* {.vkEnum.} = enum
    float16Nv = 0
    float32Nv = 1
    float64Nv = 2
    sint8Nv = 3
    sint16Nv = 4
    sint32Nv = 5
    sint64Nv = 6
    uint8Nv = 7
    uint16Nv = 8
    uint32Nv = 9
    uint64Nv = 10
  # NV coverage reduction mode
  # --------------------------
  PipelineCoverageReductionStateCreateFlagsNV* = Flags[distinct UnusedEnum]
  CoverageReductionModeNV* {.vkEnum.} = enum
    mergeNv = 0
    truncateNv = 1
  # EXT full screen exclusive
  # -------------------------
  FullScreenExclusiveEXT* {.vkEnum.} = enum
    defaultExt = 0
    allowedExt = 1
    disallowedExt = 2
    applicationControlledExt = 3
  # EXT headless surface
  # --------------------
  HeadlessSurfaceCreateFlagsEXT* = Flags[distinct UnusedEnum]
  # EXT line rasterization
  # ----------------------
  LineRasterizationModeEXT* {.vkEnum.} = enum
    defaultExt = 0
    rectangularExt = 1
    bresenhamExt = 2
    rectangularSmoothExt = 3
  # KHR pipeline executable properties
  # ----------------------------------
  PipelineExecutableStatisticFormatKHR* {.vkEnum.} = enum
    bool32Khr = 0
    int64Khr = 1
    uint64Khr = 2
    float64Khr = 3
  # NV device generated commands
  # ----------------------------
  IndirectStateFlagBitsNV* {.vkFlagBits.} = enum
    flagFrontfaceNv = 0x00000001
  IndirectStateFlagsNV* = Flags[IndirectStateFlagBitsNV]
  IndirectCommandsTokenTypeNV* {.vkEnum.} = enum
    shaderGroupNv = 0
    stateFlagsNv = 1
    indexBufferNv = 2
    vertexBufferNv = 3
    pushConstantNv = 4
    drawIndexedNv = 5
    drawNv = 6
    drawTasksNv = 7
  IndirectCommandsLayoutUsageFlagBitsNV* {.vkFlagBits.} = enum
    explicitPreprocessNv = 0x00000001
    indexedSequencesNv = 0x00000002
    unorderedSequencesNv = 0x00000004
  IndirectCommandsLayoutUsageFlagsNV* = Flags[IndirectCommandsLayoutUsageFlagBitsNV]
  # EXT private data
  # ----------------
  PrivateDataSlotCreateFlagsEXT* = Flags[PrivateDataSlotCreateFlagBitsEXT]
  PrivateDataSlotCreateFlagBitsEXT* = distinct UnusedEnum
  # NV device diagnostics config
  # ----------------------------
  DeviceDiagnosticsConfigFlagsNV* = Flags[DeviceDiagnosticsConfigFlagBitsNV]
  DeviceDiagnosticsConfigFlagBitsNV* {.vkFlagBits.} = enum
    enableShaderDebugInfoNv = 0x00000001
    enableResourceTrackingNv = 0x00000002
    enableAutomaticCheckpointsNv = 0x00000004
  # EXT directfb surface
  # --------------------
  DirectFBSurfaceCreateFlagsEXT* = Flags[distinct UnusedEnum]


ExternalSemaphoreFeatureFlagBits.defineAliases:
  exportable as exportableKhr
  importable as importableKhr

DebugReportObjectTypeEXT.defineAliases:
  debugReportCallbackExtExt as debugReportExt # Backwards-compatible alias containing a typo
  validationCacheExtExt as validationCacheExt # Backwards-compatible alias containing a typo
  descriptorUpdateTemplateExt as descriptorUpdateTemplateKhrExt
  samplerYcbcrConversionExt as samplerYcbcrConversionKhrExt
  accelerationStructureKhrExt as accelerationStructureNvExt

DescriptorPoolCreateFlagBits.defineAliases:
  updateAfterBind as updateAfterBindExt

ExternalSemaphoreHandleTypeFlagBits.defineAliases:
  opaqueFd as opaqueFdKhr
  opaqueWin32 as opaqueWin32Khr
  opaqueWin32Kmt as opaqueWin32KmtKhr
  d3d12Fence as d3d12FenceKhr
  syncFd as syncFdKhr

ObjectType.defineAliases:
  descriptorUpdateTemplate as descriptorUpdateTemplateKhr
  samplerYcbcrConversion as samplerYcbcrConversionKhr
  accelerationStructureKhr as accelerationStructureNv

GeometryFlagBitsKHR.defineAliases:
  opaqueKhr as opaqueNv
  noDuplicateAnyHitInvocationKhr as noDuplicateAnyHitInvocationNv

DescriptorType.defineAliases:
  accelerationStructureKhr as accelerationStructureNv

FormatFeatureFlagBits.defineAliases:
  transferSrc as transferSrcKhr
  transferDst as transferDstKhr
  sampledImageFilterMinmax as sampledImageFilterMinmaxExt
  midpointChromaSamples as midpointChromaSamplesKhr
  sampledImageYcbcrConversionLinearFilter as sampledImageYcbcrConversionLinearFilterKhr
  sampledImageYcbcrConversionSeparateReconstructionFilter as sampledImageYcbcrConversionSeparateReconstructionFilterKhr
  sampledImageYcbcrConversionChromaReconstructionExplicit as sampledImageYcbcrConversionChromaReconstructionExplicitKhr
  sampledImageYcbcrConversionChromaReconstructionExplicitForceable as sampledImageYcbcrConversionChromaReconstructionExplicitForceableKhr
  disjoint as disjointKhr
  cositedChromaSamples as cositedChromaSamplesKhr
  sampledImageFilterCubicImg as sampledImageFilterCubicExt

DescriptorBindingFlagBits.defineAliases:
  updateAfterBind as updateAfterBindExt
  updateUnusedWhilePending as updateUnusedWhilePendingExt
  partiallyBound as partiallyBoundExt
  variableDescriptorCount as variableDescriptorCountExt

Filter.defineAliases:
  cubicImg as cubicExt

DescriptorSetLayoutCreateFlagBits.defineAliases:
  updateAfterBindPool as updateAfterBindPoolExt

TessellationDomainOrigin.defineAliases:
  upperLeft as upperLeftKhr
  lowerLeft as lowerLeftKhr

ExternalFenceHandleTypeFlagBits.defineAliases:
  opaqueFd as opaqueFdKhr
  opaqueWin32 as opaqueWin32Khr
  opaqueWin32Kmt as opaqueWin32KmtKhr
  syncFd as syncFdKhr

FramebufferCreateFlagBits.defineAliases:
  imageless as imagelessKhr

ShaderFloatControlsIndependence.defineAliases:
  e32Only as e32OnlyKhr
  all as allKhr
  none as noneKhr

PeerMemoryFeatureFlagBits.defineAliases:
  copySrc as copySrcKhr
  copyDst as copyDstKhr
  genericSrc as genericSrcKhr
  genericDst as genericDstKhr

ImageCreateFlagBits.defineAliases:
  splitInstanceBindRegions as splitInstanceBindRegionsKhr
  e2dArrayCompatible as e2dArrayCompatibleKhr
  blockTexelViewCompatible as blockTexelViewCompatibleKhr
  extendedUsage as extendedUsageKhr
  disjoint as disjointKhr
  alias as aliasKhr

ExternalMemoryHandleTypeFlagBits.defineAliases:
  opaqueFd as opaqueFdKhr
  opaqueWin32 as opaqueWin32Khr
  opaqueWin32Kmt as opaqueWin32KmtKhr
  d3d11Texture as d3d11TextureKhr
  d3d11TextureKmt as d3d11TextureKmtKhr
  d3d12Heap as d3d12HeapKhr
  d3d12Resource as d3d12ResourceKhr

PipelineCreateFlagBits.defineAliases:
  viewIndexFromDeviceIndex as viewIndexFromDeviceIndexKhr
  dispatchBase as dispatchBaseKhr

ImageLayout.defineAliases:
  depthReadOnlyStencilAttachmentOptimal as depthReadOnlyStencilAttachmentOptimalKhr
  depthAttachmentStencilReadOnlyOptimal as depthAttachmentStencilReadOnlyOptimalKhr
  depthAttachmentOptimal as depthAttachmentOptimalKhr
  depthReadOnlyOptimal as depthReadOnlyOptimalKhr
  stencilAttachmentOptimal as stencilAttachmentOptimalKhr
  stencilReadOnlyOptimal as stencilReadOnlyOptimalKhr

ImageAspectFlagBits.defineAliases:
  plane0 as plane0Khr
  plane1 as plane1Khr
  plane2 as plane2Khr

GeometryTypeKHR.defineAliases:
  trianglesKhr as trianglesNv
  aabbsKhr as aabbsNv

BuildAccelerationStructureFlagBitsKHR.defineAliases:
  allowUpdateKhr as allowUpdateNv
  allowCompactionKhr as allowCompactionNv
  preferFastTraceKhr as preferFastTraceNv
  preferFastBuildKhr as preferFastBuildNv
  lowMemoryKhr as lowMemoryNv

IndexType.defineAliases:
  noneKhr as noneNv

DependencyFlagBits.defineAliases:
  viewLocal as viewLocalKhr
  deviceGroup as deviceGroupKhr

PipelineStageFlagBits.defineAliases:
  rayTracingShaderKhr as rayTracingShaderNv
  accelerationStructureBuildKhr as accelerationStructureBuildNv

ShaderStageFlagBits.defineAliases:
  raygenKhr as raygenNv
  anyHitKhr as anyHitNv
  closestHitKhr as closestHitNv
  missKhr as missNv
  intersectionKhr as intersectionNv
  callableKhr as callableNv

BufferUsageFlagBits.defineAliases:
  rayTracingKhr as rayTracingNv
  shaderDeviceAddress as shaderDeviceAddressExt
  shaderDeviceAddress as shaderDeviceAddressKhr

RayTracingShaderGroupTypeKHR.defineAliases:
  generalKhr as generalNv
  trianglesHitGroupKhr as trianglesHitGroupNv
  proceduralHitGroupKhr as proceduralHitGroupNv

CopyAccelerationStructureModeKHR.defineAliases:
  cloneKhr as cloneNv
  compactKhr as compactNv

AccessFlagBits.defineAliases:
  accelerationStructureReadKhr as accelerationStructureReadNv
  accelerationStructureWriteKhr as accelerationStructureWriteNv

PointClippingBehavior.defineAliases:
  allClipPlanes as allClipPlanesKhr
  userClipPlanesOnly as userClipPlanesOnlyKhr

ExternalMemoryFeatureFlagBits.defineAliases:
  dedicatedOnly as dedicatedOnlyKhr
  exportable as exportableKhr
  importable as importableKhr

DriverId.defineAliases:
  amdProprietary as amdProprietaryKhr
  amdOpenSource as amdOpenSourceKhr
  mesaRadv as mesaRadvKhr
  nvidiaProprietary as nvidiaProprietaryKhr
  intelProprietaryWindows as intelProprietaryWindowsKhr
  intelOpenSourceMesa as intelOpenSourceMesaKhr
  imaginationProprietary as imaginationProprietaryKhr
  qualcommProprietary as qualcommProprietaryKhr
  armProprietary as armProprietaryKhr
  googleSwiftshader as googleSwiftshaderKhr
  ggpProprietary as ggpProprietaryKhr
  broadcomProprietary as broadcomProprietaryKhr

SamplerYcbcrModelConversion.defineAliases:
  rgbIdentity as rgbIdentityKhr
  ycbcrIdentity as ycbcrIdentityKhr
  ycbcr709 as ycbcr709Khr
  ycbcr601 as ycbcr601Khr
  ycbcr2020 as ycbcr2020Khr

Result.defineAliases:
  errorOutOfPoolMemory as errorOutOfPoolMemoryKhr
  errorInvalidExternalHandle as errorInvalidExternalHandleKhr
  errorFragmentation as errorFragmentationExt
  errorInvalidOpaqueCaptureAddress as errorInvalidDeviceAddressExt
  errorInvalidOpaqueCaptureAddress as errorInvalidOpaqueCaptureAddressKhr
  pipelineCompileRequiredExt as errorPipelineCompileRequiredExt

AccelerationStructureTypeKHR.defineAliases:
  topLevelKhr as topLevelNv
  bottomLevelKhr as bottomLevelNv

GeometryInstanceFlagBitsKHR.defineAliases:
  triangleFacingCullDisableKhr as triangleCullDisableNv
  triangleFrontCounterclockwiseKhr as triangleFrontCounterclockwiseNv
  forceOpaqueKhr as forceOpaqueNv
  forceNoOpaqueKhr as forceNoOpaqueNv

ResolveModeFlagBits.defineAliases:
  none as noneKhr
  sampleZero as sampleZeroKhr
  average as averageKhr
  min as minKhr
  max as maxKhr

Format.defineAliases:
  g8b8g8r8422Unorm as g8b8g8r8422UnormKhr
  b8g8r8g8422Unorm as b8g8r8g8422UnormKhr
  g8B8R83plane420Unorm as g8B8R83plane420UnormKhr
  g8B8r82plane420Unorm as g8B8r82plane420UnormKhr
  g8B8R83plane422Unorm as g8B8R83plane422UnormKhr
  g8B8r82plane422Unorm as g8B8r82plane422UnormKhr
  g8B8R83plane444Unorm as g8B8R83plane444UnormKhr
  r10x6UnormPack16 as r10x6UnormPack16Khr
  r10x6g10x6Unorm2pack16 as r10x6g10x6Unorm2pack16Khr
  r10x6g10x6b10x6a10x6Unorm4pack16 as r10x6g10x6b10x6a10x6Unorm4pack16Khr
  g10x6b10x6g10x6r10x6422Unorm4pack16 as g10x6b10x6g10x6r10x6422Unorm4pack16Khr
  b10x6g10x6r10x6g10x6422Unorm4pack16 as b10x6g10x6r10x6g10x6422Unorm4pack16Khr
  g10x6B10x6R10x63plane420Unorm3pack16 as g10x6B10x6R10x63plane420Unorm3pack16Khr
  g10x6B10x6r10x62plane420Unorm3pack16 as g10x6B10x6r10x62plane420Unorm3pack16Khr
  g10x6B10x6R10x63plane422Unorm3pack16 as g10x6B10x6R10x63plane422Unorm3pack16Khr
  g10x6B10x6r10x62plane422Unorm3pack16 as g10x6B10x6r10x62plane422Unorm3pack16Khr
  g10x6B10x6R10x63plane444Unorm3pack16 as g10x6B10x6R10x63plane444Unorm3pack16Khr
  r12x4UnormPack16 as r12x4UnormPack16Khr
  r12x4g12x4Unorm2pack16 as r12x4g12x4Unorm2pack16Khr
  r12x4g12x4b12x4a12x4Unorm4pack16 as r12x4g12x4b12x4a12x4Unorm4pack16Khr
  g12x4b12x4g12x4r12x4422Unorm4pack16 as g12x4b12x4g12x4r12x4422Unorm4pack16Khr
  b12x4g12x4r12x4g12x4422Unorm4pack16 as b12x4g12x4r12x4g12x4422Unorm4pack16Khr
  g12x4B12x4R12x43plane420Unorm3pack16 as g12x4B12x4R12x43plane420Unorm3pack16Khr
  g12x4B12x4r12x42plane420Unorm3pack16 as g12x4B12x4r12x42plane420Unorm3pack16Khr
  g12x4B12x4R12x43plane422Unorm3pack16 as g12x4B12x4R12x43plane422Unorm3pack16Khr
  g12x4B12x4r12x42plane422Unorm3pack16 as g12x4B12x4r12x42plane422Unorm3pack16Khr
  g12x4B12x4R12x43plane444Unorm3pack16 as g12x4B12x4R12x43plane444Unorm3pack16Khr
  g16b16g16r16422Unorm as g16b16g16r16422UnormKhr
  b16g16r16g16422Unorm as b16g16r16g16422UnormKhr
  g16B16R163plane420Unorm as g16B16R163plane420UnormKhr
  g16B16r162plane420Unorm as g16B16r162plane420UnormKhr
  g16B16R163plane422Unorm as g16B16R163plane422UnormKhr
  g16B16r162plane422Unorm as g16B16r162plane422UnormKhr
  g16B16R163plane444Unorm as g16B16R163plane444UnormKhr

MemoryAllocateFlagBits.defineAliases:
  deviceMask as deviceMaskKhr
  deviceAddress as deviceAddressKhr
  deviceAddressCaptureReplay as deviceAddressCaptureReplayKhr

SemaphoreType.defineAliases:
  binary as binaryKhr
  timeline as timelineKhr

StructureType.defineAliases:
  debugReportCallbackCreateInfoExt as debugReportCreateInfoExt
  renderPassMultiviewCreateInfo as renderPassMultiviewCreateInfoKhr
  physicalDeviceMultiviewFeatures as physicalDeviceMultiviewFeaturesKhr
  physicalDeviceMultiviewProperties as physicalDeviceMultiviewPropertiesKhr
  physicalDeviceFeatures2 as physicalDeviceFeatures2Khr
  physicalDeviceProperties2 as physicalDeviceProperties2Khr
  formatProperties2 as formatProperties2Khr
  imageFormatProperties2 as imageFormatProperties2Khr
  physicalDeviceImageFormatInfo2 as physicalDeviceImageFormatInfo2Khr
  queueFamilyProperties2 as queueFamilyProperties2Khr
  physicalDeviceMemoryProperties2 as physicalDeviceMemoryProperties2Khr
  sparseImageFormatProperties2 as sparseImageFormatProperties2Khr
  physicalDeviceSparseImageFormatInfo2 as physicalDeviceSparseImageFormatInfo2Khr
  memoryAllocateFlagsInfo as memoryAllocateFlagsInfoKhr
  deviceGroupRenderPassBeginInfo as deviceGroupRenderPassBeginInfoKhr
  deviceGroupCommandBufferBeginInfo as deviceGroupCommandBufferBeginInfoKhr
  deviceGroupSubmitInfo as deviceGroupSubmitInfoKhr
  deviceGroupBindSparseInfo as deviceGroupBindSparseInfoKhr
  bindBufferMemoryDeviceGroupInfo as bindBufferMemoryDeviceGroupInfoKhr
  bindImageMemoryDeviceGroupInfo as bindImageMemoryDeviceGroupInfoKhr
  physicalDeviceGroupProperties as physicalDeviceGroupPropertiesKhr
  deviceGroupDeviceCreateInfo as deviceGroupDeviceCreateInfoKhr
  physicalDeviceExternalImageFormatInfo as physicalDeviceExternalImageFormatInfoKhr
  externalImageFormatProperties as externalImageFormatPropertiesKhr
  physicalDeviceExternalBufferInfo as physicalDeviceExternalBufferInfoKhr
  externalBufferProperties as externalBufferPropertiesKhr
  physicalDeviceIdProperties as physicalDeviceIdPropertiesKhr
  externalMemoryBufferCreateInfo as externalMemoryBufferCreateInfoKhr
  externalMemoryImageCreateInfo as externalMemoryImageCreateInfoKhr
  exportMemoryAllocateInfo as exportMemoryAllocateInfoKhr
  physicalDeviceExternalSemaphoreInfo as physicalDeviceExternalSemaphoreInfoKhr
  externalSemaphoreProperties as externalSemaphorePropertiesKhr
  physicalDeviceIdProperties as physicalDeviceIdPropertiesKhr
  exportSemaphoreCreateInfo as exportSemaphoreCreateInfoKhr
  physicalDeviceShaderFloat16Int8Features as physicalDeviceShaderFloat16Int8FeaturesKhr
  physicalDeviceShaderFloat16Int8Features as physicalDeviceFloat16Int8FeaturesKhr
  physicalDevice16bitStorageFeatures as physicalDevice16bitStorageFeaturesKhr
  descriptorUpdateTemplateCreateInfo as descriptorUpdateTemplateCreateInfoKhr
  physicalDeviceImagelessFramebufferFeatures as physicalDeviceImagelessFramebufferFeaturesKhr
  framebufferAttachmentsCreateInfo as framebufferAttachmentsCreateInfoKhr
  framebufferAttachmentImageInfo as framebufferAttachmentImageInfoKhr
  renderPassAttachmentBeginInfo as renderPassAttachmentBeginInfoKhr
  attachmentDescription2 as attachmentDescription2Khr
  attachmentReference2 as attachmentReference2Khr
  subpassDescription2 as subpassDescription2Khr
  subpassDependency2 as subpassDependency2Khr
  renderPassCreateInfo2 as renderPassCreateInfo2Khr
  subpassBeginInfo as subpassBeginInfoKhr
  subpassEndInfo as subpassEndInfoKhr
  physicalDeviceExternalFenceInfo as physicalDeviceExternalFenceInfoKhr
  externalFenceProperties as externalFencePropertiesKhr
  physicalDeviceIdProperties as physicalDeviceIdPropertiesKhr
  exportFenceCreateInfo as exportFenceCreateInfoKhr
  physicalDevicePointClippingProperties as physicalDevicePointClippingPropertiesKhr
  renderPassInputAttachmentAspectCreateInfo as renderPassInputAttachmentAspectCreateInfoKhr
  imageViewUsageCreateInfo as imageViewUsageCreateInfoKhr
  pipelineTessellationDomainOriginStateCreateInfo as pipelineTessellationDomainOriginStateCreateInfoKhr
  physicalDeviceVariablePointersFeatures as physicalDeviceVariablePointersFeaturesKhr
  physicalDeviceVariablePointersFeaturesKhr as physicalDeviceVariablePointerFeaturesKhr
  memoryDedicatedRequirements as memoryDedicatedRequirementsKhr
  memoryDedicatedAllocateInfo as memoryDedicatedAllocateInfoKhr
  physicalDeviceSamplerFilterMinmaxProperties as physicalDeviceSamplerFilterMinmaxPropertiesExt
  samplerReductionModeCreateInfo as samplerReductionModeCreateInfoExt
  bufferMemoryRequirementsInfo2 as bufferMemoryRequirementsInfo2Khr
  imageMemoryRequirementsInfo2 as imageMemoryRequirementsInfo2Khr
  imageSparseMemoryRequirementsInfo2 as imageSparseMemoryRequirementsInfo2Khr
  memoryRequirements2 as memoryRequirements2Khr
  sparseImageMemoryRequirements2 as sparseImageMemoryRequirements2Khr
  imageFormatListCreateInfo as imageFormatListCreateInfoKhr
  samplerYcbcrConversionCreateInfo as samplerYcbcrConversionCreateInfoKhr
  samplerYcbcrConversionInfo as samplerYcbcrConversionInfoKhr
  bindImagePlaneMemoryInfo as bindImagePlaneMemoryInfoKhr
  imagePlaneMemoryRequirementsInfo as imagePlaneMemoryRequirementsInfoKhr
  physicalDeviceSamplerYcbcrConversionFeatures as physicalDeviceSamplerYcbcrConversionFeaturesKhr
  samplerYcbcrConversionImageFormatProperties as samplerYcbcrConversionImageFormatPropertiesKhr
  bindBufferMemoryInfo as bindBufferMemoryInfoKhr
  bindImageMemoryInfo as bindImageMemoryInfoKhr
  descriptorSetLayoutBindingFlagsCreateInfo as descriptorSetLayoutBindingFlagsCreateInfoExt
  physicalDeviceDescriptorIndexingFeatures as physicalDeviceDescriptorIndexingFeaturesExt
  physicalDeviceDescriptorIndexingProperties as physicalDeviceDescriptorIndexingPropertiesExt
  descriptorSetVariableDescriptorCountAllocateInfo as descriptorSetVariableDescriptorCountAllocateInfoExt
  descriptorSetVariableDescriptorCountLayoutSupport as descriptorSetVariableDescriptorCountLayoutSupportExt
  bindAccelerationStructureMemoryInfoKhr as bindAccelerationStructureMemoryInfoNv
  writeDescriptorSetAccelerationStructureKhr as writeDescriptorSetAccelerationStructureNv
  physicalDeviceMaintenance3Properties as physicalDeviceMaintenance3PropertiesKhr
  descriptorSetLayoutSupport as descriptorSetLayoutSupportKhr
  physicalDeviceShaderSubgroupExtendedTypesFeatures as physicalDeviceShaderSubgroupExtendedTypesFeaturesKhr
  physicalDevice8bitStorageFeatures as physicalDevice8bitStorageFeaturesKhr
  physicalDeviceShaderAtomicInt64Features as physicalDeviceShaderAtomicInt64FeaturesKhr
  physicalDeviceDriverProperties as physicalDeviceDriverPropertiesKhr
  physicalDeviceFloatControlsProperties as physicalDeviceFloatControlsPropertiesKhr
  physicalDeviceDepthStencilResolveProperties as physicalDeviceDepthStencilResolvePropertiesKhr
  subpassDescriptionDepthStencilResolve as subpassDescriptionDepthStencilResolveKhr
  physicalDeviceTimelineSemaphoreFeatures as physicalDeviceTimelineSemaphoreFeaturesKhr
  physicalDeviceTimelineSemaphoreProperties as physicalDeviceTimelineSemaphorePropertiesKhr
  semaphoreTypeCreateInfo as semaphoreTypeCreateInfoKhr
  timelineSemaphoreSubmitInfo as timelineSemaphoreSubmitInfoKhr
  semaphoreWaitInfo as semaphoreWaitInfoKhr
  semaphoreSignalInfo as semaphoreSignalInfoKhr
  queryPoolPerformanceQueryCreateInfoIntel as queryPoolCreateInfoIntel
  physicalDeviceVulkanMemoryModelFeatures as physicalDeviceVulkanMemoryModelFeaturesKhr
  physicalDeviceScalarBlockLayoutFeatures as physicalDeviceScalarBlockLayoutFeaturesExt
  physicalDeviceSeparateDepthStencilLayoutsFeatures as physicalDeviceSeparateDepthStencilLayoutsFeaturesKhr
  attachmentReferenceStencilLayout as attachmentReferenceStencilLayoutKhr
  attachmentDescriptionStencilLayout as attachmentDescriptionStencilLayoutKhr
  physicalDeviceBufferDeviceAddressFeaturesExt as physicalDeviceBufferAddressFeaturesExt
  bufferDeviceAddressInfo as bufferDeviceAddressInfoExt
  imageStencilUsageCreateInfo as imageStencilUsageCreateInfoExt
  physicalDeviceUniformBufferStandardLayoutFeatures as physicalDeviceUniformBufferStandardLayoutFeaturesKhr
  physicalDeviceBufferDeviceAddressFeatures as physicalDeviceBufferDeviceAddressFeaturesKhr
  bufferDeviceAddressInfo as bufferDeviceAddressInfoKhr
  bufferOpaqueCaptureAddressCreateInfo as bufferOpaqueCaptureAddressCreateInfoKhr
  memoryOpaqueCaptureAddressAllocateInfo as memoryOpaqueCaptureAddressAllocateInfoKhr
  deviceMemoryOpaqueCaptureAddressInfo as deviceMemoryOpaqueCaptureAddressInfoKhr
  physicalDeviceHostQueryResetFeatures as physicalDeviceHostQueryResetFeaturesExt

SamplerAddressMode.defineAliases:
  mirrorClampToEdge as mirrorClampToEdgeKhr

PipelineBindPoint.defineAliases:
  rayTracingKhr as rayTracingNv

FenceImportFlagBits.defineAliases:
  temporary as temporaryKhr

QueryType.defineAliases:
  accelerationStructureCompactedSizeKhr as accelerationStructureCompactedSizeNv

SemaphoreWaitFlagBits.defineAliases:
  any as anyKhr

PerformanceCounterScopeKHR.defineAliases:
  commandBufferKhr as queryScopeCommandBufferKhr
  renderPassKhr as queryScopeRenderPassKhr
  commandKhr as queryScopeCommandKhr

SemaphoreImportFlagBits.defineAliases:
  temporary as temporaryKhr

BufferCreateFlagBits.defineAliases:
  deviceAddressCaptureReplay as deviceAddressCaptureReplayExt
  deviceAddressCaptureReplay as deviceAddressCaptureReplayKhr

MemoryHeapFlagBits.defineAliases:
  multiInstance as multiInstanceKhr

ChromaLocation.defineAliases:
  cositedEven as cositedEvenKhr
  midpoint as midpointKhr

SamplerReductionMode.defineAliases:
  weightedAverage as weightedAverageExt
  min as minExt
  max as maxExt

AccelerationStructureMemoryRequirementsTypeKHR.defineAliases:
  objectKhr as objectNv
  buildScratchKhr as buildScratchNv
  updateScratchKhr as updateScratchNv

DescriptorUpdateTemplateType.defineAliases:
  descriptorSet as descriptorSetKhr

ExternalFenceFeatureFlagBits.defineAliases:
  exportable as exportableKhr
  importable as importableKhr

SamplerYcbcrRange.defineAliases:
  ituFull as ituFullKhr
  ituNarrow as ituNarrowKhr

ColorSpaceKHR.defineAliases:
  srgbNonlinearKhr as colorspaceSrgbNonlinearKhr # Backwards-compatible alias containing a typo
  displayP3LinearExt as dciP3LinearExt
