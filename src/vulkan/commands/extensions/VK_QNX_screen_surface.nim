# This file is generated by the program.
# Note that any changes to this file will be reset by the execution of
# the generated program.

# VK_QNX_screen_surface

import ../tools
const
  # VK_QNX_screen_surface
  QnxScreenSurfaceSpecVersion* = 1
  QnxScreenSurfaceExtensionName* = "VK_QNX_screen_surface"


# VK_QNX_screen_surface
# =====================
proc createScreenSurfaceQNX*(
      instance: Instance;
      pCreateInfo: ptr ScreenSurfaceCreateInfoQNX;
      pAllocator = default(ptr AllocationCallbacks);
      pSurface: ptr SurfaceKHR;
    ): Result {.lazyload("vkCreateScreenSurfaceQNX", InstanceLevel),
      successCodes: @[Result.success],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorOutOfDeviceMemory].}
proc getPhysicalDeviceScreenPresentationSupportQNX*(
      physicalDevice: PhysicalDevice;
      queueFamilyIndex: uint32;
      window: ptr screen_window;
    ): Bool32 {.lazyload("vkGetPhysicalDeviceScreenPresentationSupportQNX", InstanceLevel).}


proc loadAllVK_QNX_screen_surface*(instance: Instance) = instance.loadCommands:
  createScreenSurfaceQNX
  getPhysicalDeviceScreenPresentationSupportQNX
proc loadVK_QNX_screen_surface*(instance: Instance) = instance.loadCommands:
  createScreenSurfaceQNX
  getPhysicalDeviceScreenPresentationSupportQNX