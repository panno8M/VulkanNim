# This file is generated by the program.
# Note that any changes to this file will be reset by the execution of
# the generated program.

# VK_KHR_copy_commands2

import ../tools
const
  # VK_KHR_copy_commands2
  KhrCopyCommands2SpecVersion* = 1
  KhrCopyCommands2ExtensionName* = "VK_KHR_copy_commands2"


# VK_KHR_copy_commands2
# =====================
proc cmdCopyBuffer2KHR*(
      commandBuffer: CommandBuffer;
      pCopyBufferInfo: ptr CopyBufferInfo2KHR;
    ): void {.cdecl, lazyload("vkCmdCopyBuffer2KHR", DeviceLevel).}
proc cmdCopyImage2KHR*(
      commandBuffer: CommandBuffer;
      pCopyImageInfo: ptr CopyImageInfo2KHR;
    ): void {.cdecl, lazyload("vkCmdCopyImage2KHR", DeviceLevel).}
proc cmdCopyBufferToImage2KHR*(
      commandBuffer: CommandBuffer;
      pCopyBufferToImageInfo: ptr CopyBufferToImageInfo2KHR;
    ): void {.cdecl, lazyload("vkCmdCopyBufferToImage2KHR", DeviceLevel).}
proc cmdCopyImageToBuffer2KHR*(
      commandBuffer: CommandBuffer;
      pCopyImageToBufferInfo: ptr CopyImageToBufferInfo2KHR;
    ): void {.cdecl, lazyload("vkCmdCopyImageToBuffer2KHR", DeviceLevel).}
proc cmdBlitImage2KHR*(
      commandBuffer: CommandBuffer;
      pBlitImageInfo: ptr BlitImageInfo2KHR;
    ): void {.cdecl, lazyload("vkCmdBlitImage2KHR", DeviceLevel).}
proc cmdResolveImage2KHR*(
      commandBuffer: CommandBuffer;
      pResolveImageInfo: ptr ResolveImageInfo2KHR;
    ): void {.cdecl, lazyload("vkCmdResolveImage2KHR", DeviceLevel).}


proc loadAllVK_KHR_copy_commands2*(instance: Instance) = instance.loadCommands:
  cmdCopyBuffer2KHR
  cmdCopyImage2KHR
  cmdCopyBufferToImage2KHR
  cmdCopyImageToBuffer2KHR
  cmdBlitImage2KHR
  cmdResolveImage2KHR
proc loadVK_KHR_copy_commands2*(device: Device) = device.loadCommands:
  cmdCopyBuffer2KHR
  cmdCopyImage2KHR
  cmdCopyBufferToImage2KHR
  cmdCopyImageToBuffer2KHR
  cmdBlitImage2KHR
  cmdResolveImage2KHR