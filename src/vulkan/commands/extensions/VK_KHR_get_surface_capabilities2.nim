# This file is generated by the program.
# Note that any changes to this file will be reset by the execution of
# the generated program.

# VK_KHR_get_surface_capabilities2

import ../tools
const
  # VK_KHR_get_surface_capabilities2
  KhrGetSurfaceCapabilities2SpecVersion* = 1
  KhrGetSurfaceCapabilities2ExtensionName* = "VK_KHR_get_surface_capabilities2"


# VK_KHR_get_surface_capabilities2
# ================================
proc getPhysicalDeviceSurfaceCapabilities2KHR*(
      physicalDevice: PhysicalDevice;
      pSurfaceInfo: ptr PhysicalDeviceSurfaceInfo2KHR;
      pSurfaceCapabilities: ptr SurfaceCapabilities2KHR;
    ): Result {.lazyload("vkGetPhysicalDeviceSurfaceCapabilities2KHR", InstanceLevel),
      successCodes: @[Result.success],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorOutOfDeviceMemory, Result.errorSurfaceLostKhr].}
proc getPhysicalDeviceSurfaceFormats2KHR*(
      physicalDevice: PhysicalDevice;
      pSurfaceInfo: ptr PhysicalDeviceSurfaceInfo2KHR;
      pSurfaceFormatCount: ptr uint32;
      pSurfaceFormats {.length: pSurfaceFormatCount.} = default(arrPtr[SurfaceFormat2KHR]);
    ): Result {.lazyload("vkGetPhysicalDeviceSurfaceFormats2KHR", InstanceLevel),
      successCodes: @[Result.success, Result.incomplete],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorOutOfDeviceMemory, Result.errorSurfaceLostKhr].}


proc loadAllVK_KHR_get_surface_capabilities2*(instance: Instance) = instance.loadCommands:
  getPhysicalDeviceSurfaceCapabilities2KHR
  getPhysicalDeviceSurfaceFormats2KHR
proc loadVK_KHR_get_surface_capabilities2*(instance: Instance) = instance.loadCommands:
  getPhysicalDeviceSurfaceCapabilities2KHR
  getPhysicalDeviceSurfaceFormats2KHR