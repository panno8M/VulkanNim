# This file is generated by the program.
# Note that any changes to this file will be reset by the execution of
# the generated program.

# VK_NVX_binary_import

import ../tools
const
  # VK_NVX_binary_import
  NvxBinaryImportSpecVersion* = 1
  NvxBinaryImportExtensionName* = "VK_NVX_binary_import"


# VK_NVX_binary_import
# ====================
proc createCuModuleNVX*(
      device: Device;
      pCreateInfo: ptr CuModuleCreateInfoNVX;
      pAllocator = default(ptr AllocationCallbacks);
      pModule: ptr CuModuleNVX;
    ): Result {.lazyload("vkCreateCuModuleNVX", DeviceLevel),
      successCodes: @[Result.success],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorInitializationFailed].}
proc createCuFunctionNVX*(
      device: Device;
      pCreateInfo: ptr CuFunctionCreateInfoNVX;
      pAllocator = default(ptr AllocationCallbacks);
      pFunction: ptr CuFunctionNVX;
    ): Result {.lazyload("vkCreateCuFunctionNVX", DeviceLevel),
      successCodes: @[Result.success],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorInitializationFailed].}
proc destroyCuModuleNVX*(
      device: Device;
      module: CuModuleNVX;
      pAllocator = default(ptr AllocationCallbacks);
    ): void {.lazyload("vkDestroyCuModuleNVX", DeviceLevel).}
proc destroyCuFunctionNVX*(
      device: Device;
      function: CuFunctionNVX;
      pAllocator = default(ptr AllocationCallbacks);
    ): void {.lazyload("vkDestroyCuFunctionNVX", DeviceLevel).}
proc cmdCuLaunchKernelNVX*(
      commandBuffer: CommandBuffer;
      pLaunchInfo: ptr CuLaunchInfoNVX;
    ): void {.lazyload("vkCmdCuLaunchKernelNVX", DeviceLevel),
      queues: QueueFlags{graphics, compute}, cmdchain.}


proc loadAllVK_NVX_binary_import*(instance: Instance) = instance.loadCommands:
  createCuModuleNVX
  createCuFunctionNVX
  destroyCuModuleNVX
  destroyCuFunctionNVX
  cmdCuLaunchKernelNVX
proc loadVK_NVX_binary_import*(device: Device) = device.loadCommands:
  createCuModuleNVX
  createCuFunctionNVX
  destroyCuModuleNVX
  destroyCuFunctionNVX
  cmdCuLaunchKernelNVX