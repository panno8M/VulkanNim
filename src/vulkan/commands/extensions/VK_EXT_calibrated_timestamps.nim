# This file is generated by the program.
# Note that any changes to this file will be reset by the execution of
# the generated program.

# VK_EXT_calibrated_timestamps

import ../tools
const
  # VK_EXT_calibrated_timestamps
  ExtCalibratedTimestampsSpecVersion* = 2
  ExtCalibratedTimestampsExtensionName* = "VK_EXT_calibrated_timestamps"


# VK_EXT_calibrated_timestamps
# ============================
proc getPhysicalDeviceCalibrateableTimeDomainsEXT*(
      physicalDevice: PhysicalDevice;
      pTimeDomainCount: ptr uint32;
      pTimeDomains {.length: pTimeDomainCount.} = default(arrPtr[TimeDomainEXT]);
    ): Result {.cdecl,
      successCodes: @[Result.success, Result.incomplete],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorOutOfDeviceMemory],
      lazyload("vkGetPhysicalDeviceCalibrateableTimeDomainsEXT", InstanceLevel).}
proc getCalibratedTimestampsEXT*(
      device: Device;
      timestampCount: uint32;
      pTimestampInfos {.length: timestampCount.}: arrPtr[CalibratedTimestampInfoEXT];
      pTimestamps {.length: timestampCount.}: arrPtr[uint64];
      pMaxDeviation: ptr uint64;
    ): Result {.cdecl,
      successCodes: @[Result.success],
      errorCodes: @[Result.errorOutOfHostMemory, Result.errorOutOfDeviceMemory],
      lazyload("vkGetCalibratedTimestampsEXT", DeviceLevel).}


proc loadAllVK_EXT_calibrated_timestamps*(instance: Instance) = instance.loadCommands:
  getPhysicalDeviceCalibrateableTimeDomainsEXT
  getCalibratedTimestampsEXT
proc loadVK_EXT_calibrated_timestamps*(instance: Instance) = instance.loadCommands:
  getPhysicalDeviceCalibrateableTimeDomainsEXT
proc loadVK_EXT_calibrated_timestamps*(device: Device) = device.loadCommands:
  getCalibratedTimestampsEXT